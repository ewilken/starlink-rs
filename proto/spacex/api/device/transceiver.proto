syntax = "proto3";

package SpaceX.API.Device;

option go_package = "spacex.com/api/device";

import "spacex/api/device/common.proto";
import "spacex/api/device/dish.proto";

message TransceiverIFLoopbackTestRequest {
	optional bool enable_if_loopback = 1 [json_name="enableIfLoopback"];
}

message TransceiverIFLoopbackTestResponse {
	optional float ber_loopback_test = 1 [json_name="berLoopbackTest"];
	optional float snr_loopback_test = 2 [json_name="snrLoopbackTest"];
	optional float rssi_loopback_test = 3 [json_name="rssiLoopbackTest"];
	optional bool pll_lock = 4 [json_name="pllLock"];
}

message TransceiverGetStatusRequest {
}

message TransceiverGetStatusResponse {
	optional .SpaceX.API.Device.TransceiverModulatorState mod_state = 1 [json_name="modState"];
	optional .SpaceX.API.Device.TransceiverModulatorState demod_state = 2 [json_name="demodState"];
	optional .SpaceX.API.Device.TransceiverTxRxState tx_state = 3 [json_name="txState"];
	optional .SpaceX.API.Device.TransceiverTxRxState rx_state = 4 [json_name="rxState"];
	optional .SpaceX.API.Device.DishState state = 1006 [json_name="state"];
	optional .SpaceX.API.Device.TransceiverFaults faults = 1007 [json_name="faults"];
	optional .SpaceX.API.Device.TransceiverTransmitBlankingState transmit_blanking_state = 1008 [json_name="transmitBlankingState"];
	optional float modem_asic_temp = 1009 [json_name="modemAsicTemp"];
	optional float tx_if_temp = 1010 [json_name="txIfTemp"];
}

message TransceiverFaults {
	optional bool over_temp_modem_asic_fault = 1 [json_name="overTempModemAsicFault"];
	optional bool over_temp_pcba_fault = 2 [json_name="overTempPcbaFault"];
	optional bool dc_voltage_fault = 3 [json_name="dcVoltageFault"];
}

enum TransceiverModulatorState {
	MODSTATE_UNKNOWN = 0;
	MODSTATE_ENABLED = 1;
	MODSTATE_DISABLED = 2;
}

enum TransceiverTxRxState {
	TXRX_UNKNOWN = 0;
	TXRX_ENABLED = 1;
	TXRX_DISABLED = 2;
}

enum TransceiverTransmitBlankingState {
	TB_UNKNOWN = 0;
	TB_ENABLED = 1;
	TB_DISABLED = 2;
}
